@model Fujitsu_eSignPO.Models.PRPO.PRPOViewModel
@{
    ViewData["Title"] = "Create New PRPO";
}
@*<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" />*@
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<link href="~/css/select2.min.css" rel="stylesheet" />
<link href="~/css/ui-autocomplete.css" rel="stylesheet" />
<style>
    .amount {
        width: 100%;
        height: 1.2vw;
    }

    .select2-container {
        width: 100% !important;
        font-size: 1rem; /* Bootstrap 5 default font size */
        font-weight: 400; /* Normal weight */
        line-height: 1.5; /* Adjust line height for better readability */
    }

    .select2-selection {
        min-width: 0;
    }
</style>
<form id="prpoForm" novalidate class="needs-validation" style="font-size:22px;">
    <div class="card o-hidden border-0 shadow-sm small">
        <div class="card-header bg-primary text-white d-flex justify-content-between">
            @if (Model.listPRPOItems != null && Model.nStatus <= 1)
            {
                <div class="font-weight-bold">EDIT PURCHASE ORDER</div>
                <div>
                    @if (Model.nStatus == 0)
                    {
                        <button type="button" onclick="reSubmitPrPo()" class="btn btn btn-success btn-circle"><i class="fas fa-fw fa-paper-plane"></i></button>
                    }
                    <button type="button" onclick="previewReport()" class="btn btn btn-warning btn-circle"><i class="fas fa-fw fa-save"></i></button>
                </div>
            }
            else
            {
                <div class="font-weight-bold">NEW PURCHASE ORDER</div>
                <div><button type="button" onclick="previewReport()" class="btn btn btn-success btn-circle"><i class="fas fa-fw fa-paper-plane"></i></button></div>
            }

        </div>
        <div class="card-body pb-0 mb-3">


            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group row">
                <div class="col-md-3">
                    <label for="vendorName">Vendor :</label>
                    <select id="vendorName" class="form-control form-control-sm" asp-for="vendorName">
                        <option value="">--- Select Vendor ---</option>
                        @foreach (var vendor in ViewBag.Vendor)
                        {
                            if (Model.vendorName == vendor.VendorCode)
                            {
                                <option value="@vendor.VendorCode" selected>@vendor.VendorName</option>
                            }
                            else
                            {
                                <option value="@vendor.VendorCode">@vendor.VendorName</option>
                            }
                        }
                    </select>
                    <span asp-validation-for="vendorName" class="text-danger"></span>
                </div>
                <div class="col-md-3">
                    <label for="department">Department :</label>

                    <select id="department" class="form-control form-control-sm" asp-for="department">
                        <option value="">--- Select Department ---</option>
                        @{
                            var claimsDep = User.Claims.Where(x => x.Type == "Department").Select(claim => new { claim.Value }).FirstOrDefault();
                        }
                        @foreach (var depItem in ViewBag.departments)
                        {
                            if (Model.department == depItem.DepartmentName || claimsDep.Value == depItem.DepartmentName)
                            {
                                <option value="@depItem.DepartmentName" selected>@depItem.DepartmentName</option>
                            }
                            else
                            {
                                <option value="@depItem.DepartmentName">@depItem.DepartmentName</option>
                            }
                        }
                    </select>
                    <span asp-validation-for="vendorName" class="text-danger"></span>
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Reference / Quotation : </label>
                        <input class="form-control form-control-sm" placeholder="Enter Reference / Quotation .." asp-for="refQuatation" />

                    </div>
                </div>
                <div class="col-md-3">

                    <label>Vat Type : </label>

                    <select id="vatOption" class="form-control form-control-sm" asp-for="vatOption">
                        <option value="">--- Select VAT ---</option>
                        <option value="I">Include VAT</option>
                        <option value="E">Exclude VAT</option>
                        <option value="N">No VAT</option>

                    </select>
                    <span asp-validation-for="vatOption" class="text-danger"></span>




                </div>



            </div>
            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        <label for="currency">Currency : </label>
                        <select id="currency" class="form-control form-control-sm" asp-for="currency">
                            <option value="">--- Select Currency ---</option>

                            @foreach (var currItem in ViewBag.curr)
                            {
                                if (Model.currency == currItem.CurrencyName)
                                {
                                    <option value="@currItem.CurrencyName" selected>@currItem.CurrencyName</option>
                                }
                                else
                                {
                                    <option value="@currItem.CurrencyName">@currItem.CurrencyName</option>
                                }
                            }
                        </select>
                        <span asp-validation-for="currency" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-3">
                    <label for="rate">Rate : </label>
                    <input class="form-control form-control-sm" placeholder="Enter Rate.." type="number" asp-for="rate" />
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        <label for="shippingDate">Shipping Date :</label>
                        <input class="form-control form-control-sm" id="shippingDate" type="date" asp-for="shippingDate" />
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label for="poCreateDate">PO Date :</label>
                        <input class="form-control form-control-sm" id="poDate" type="date" asp-for="poDate" />
                        <span asp-validation-for="poDate" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <hr />

            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        <label for="mainCode">Main Code : </label>
                        <select id="mainCode" class="form-control form-control-sm" asp-for="mainCode">
                            <option value="">--- Select Main Code ---</option>
                            @foreach (var m in ViewBag.mainCode)
                            {
                                if (Model.mainCode == m)
                                {
                                    <option value="@m" selected>@m</option>
                                }
                                else
                                {
                                    <option value="@m">@m</option>
                                }
                            }
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <label for="subCode1">Sub Code 1 : </label>
                    <select id="subCode1" class="form-control form-control-sm" asp-for="subCode1">
                        <option value="">--- Select Sub Code 1 ---</option>

                        @if (ViewBag.subCode1 != null)
                        {
                            foreach (var s1 in ViewBag.subCode1)
                            {
                                if (Model.subCode1 == "s1")
                                {
                                    <option value="@s1" selected>@s1</option>
                                }
                                else
                                {
                                    <option value="@s1">@s1</option>
                                }
                            }
                        }
                    </select>

                </div>
                <div class="col-md-3">
                    <label for="subCode2">Sub Code 2 : </label>
                    <select id="subCode2" class="form-control form-control-sm" asp-for="subCode2">
                        <option value="">--- Select Sub Code 2 ---</option>
                        @if (ViewBag.subCode2 != null)
                        {
                            foreach (var s2 in ViewBag.subCode2)
                            {
                                if (Model.subCode1 == "s1")
                                {
                                    <option value="@s2" selected>@s2</option>
                                }
                                else
                                {
                                    <option value="@s2">@s2</option>
                                }
                            }
                        }
                    </select>

                </div>
            </div>

            <div class="row">
                <div class="col-md-3">
                    <label for="bugdet">Budget : </label>
                    <input class="form-control form-control-sm" asp-for="budget" readonly />

                </div>
                <div class="col-md-3">
                    <label for="balance">Balance : </label>
                    <input class="form-control form-control-sm" asp-for="balance" readonly />

                </div>

            </div>




        </div>



        <div class="card o-hidden border-0 shadow-sm  small mt-2">
            <div class="card-header bg-primary text-white font-weight-bold">
                ADD ITEM PURCHASE ORDER
            </div>
            <div class="card-body">
                <div class="text-center mt-2">
                    <button type="button" id="addToList" class="btn  bg-gradient-success text-white"><i class="fa fa-plus"></i> Add to list</button>
                    @*<button type="button" id="Cancel" class="btn  bg-gradient-danger text-white" onclick="clearSrcItem()"><i class="fa fa-recycle"></i> Reset</button>*@
                </div>
                <div class="mt-2 table-responsive small" style="padding:5px;">
                    <table id="listTable" class="table table-bordered table-striped">
                        <thead>
                            <tr class="bg-primary text-white">
                                <th style="width:5%">No.#</th>
                                <th style="width:15%">Part No</th>
                                <th style="width:15%">Part Name</th>
                                <th style="width:10%">Vat Type</th>
                                <th style="width:10%">Unit Price</th>
                                <th style="width:10%">Qty</th>
                                <th style="width:15%">Amount</th>
                                <th style="width:10%">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.listPRPOItems != null)
                            {
                                foreach (var itemPR in Model.listPRPOItems)
                                {
                                    <tr>
                                        <td class="counterCell text-center">@itemPR.no</td>
                                        <td><input type="text" name="partNo" class="form-control form-control-sm" value="@itemPR.partNo" /></td>
                                        <td><input type="text" name="partName" class="form-control form-control-sm" value="@itemPR.partName" /></td>
                                        <td>
                                            <select id='vatType' class='form-control form-control-sm vatType'>
                                                @{
                                                    string[] vatValue = { "I", "E", "N" };
                                                    string[] vatText = { "Include VAT", "Exclude VAT", "No VAT" };
                                                }

                                                @for (var i = 0; i < vatValue.Length; i++)
                                                {

                                                    if (vatValue[i] == itemPR.vatType)
                                                    {
                                                        <option value="@vatValue[i]" selected>@vatText[i]</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@vatValue[i]">@vatText[i]</option>
                                                    }

                                                }
                                            </select>
                                        </td>
                                        <td><input type="number" name="unitPrice" class="form-control form-control-sm unitPrice" value="@itemPR.unitPrice.Replace(",","")" /></td>
                                        <td><input type="number" name="qty" class="form-control form-control-sm qty" value="@itemPR.qty" /></td>
                                        <td><span class="amount">@itemPR.amount</span></td>

                                        <td><button type="button" class="deleteBtn btn btn-sm btn-danger"><i class="fas fa-trash"> </i>Delete</button></td>
                                    </tr>
                                }
                            }
                        </tbody>
                        <tfoot>
                            <tr>
                                <td colspan="5"></td>
                                <td class="text-right">Total Amount</td>
                                <td colspan="">
                                    <input type="text" class="amount form-control form-control-sm" id="totalAmount" asp-for="totalAmount" readonly>
                                    <div>
                                        <span asp-validation-for="totalAmount" class="text-danger"></span>
                                    </div>
                                </td>
                                @*<td>
                                <input type="text" class="amount form-control form-control-sm" id="rate" asp-for="rate" readonly>
                                <div>
                                <span asp-validation-for="rate" class="text-danger"></span>
                                </div>
                                </td>*@
                            </tr>
                            <tr>
                                <td colspan="5"></td>
                                <td class="text-right">Total Amount in THB</td>
                                <td colspan="2">
                                    <input type="text" class="amount form-control form-control-sm" id="totalAmountTHB" asp-for="totalAmountTHB" readonly>
                                    <div>
                                        <span asp-validation-for="totalAmountTHB" class="text-danger"></span>
                                    </div>
                                </td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>

        <div class="card o-hidden border-0 shadow-sm  small mt-2">
            <div class="card-header bg-primary text-white font-weight-bold">
                ATTACHMENT FILE
            </div>
            <div class="card-body">
                <div class="input-group row">
                    <div class="col-md-12">
                        <div class="custom-file">
                            <input type="file" class="custom-file-input" id="fileInput" name="file" multiple>
                            <label class="custom-file-label" for="fileInput">Choose file</label>
                        </div>
                        <div class="mt-3 text-center">
                            <button type="button" class="btn bg-gradient-info text-white" id="uploadButton"><i class="fa fa-file-upload"></i> Upload</button>

                        </div>
                        <div class="mt-3">
                            <table class="table table-bordered" id="attachedFilesTable">
                                <thead>
                                    <tr class="bg-primary text-white">
                                        <th>File Name</th>
                                        <th>Size</th>
                                        <th>Type</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.fileUploads != null)
                                    {
                                        foreach (var ItemFile in Model.fileUploads)
                                        {
                                            <tr>
                                                <td><a target="_blank" href="@Url.Action("viewFile","PRPO" , new {fileName = $"{ItemFile.uPrId}_{@ItemFile.sAttach_Name}" })">@ItemFile?.sAttach_Name</a></td>
                                                <td>@ItemFile?.sAttach_File_Size MB.</td>
                                                <td>@ItemFile?.sAttach_File_Type</td>
                                                <td><button type="button" class="deleteBtn btn btn-sm btn-danger" onclick="deleteFile('@ItemFile.sAttach_Name')"><i class="fas fa-trash"> </i>Delete</button></td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card o-hidden border-0 shadow-sm  small mt-2">
            <div class="card-header bg-primary text-white font-weight-bold">
                REASON
            </div>
            <div class="card-body">
                <div class="form-group row">
                    <div class="col-md-5">
                        <label for="unitCost">Reason :</label>
                        <textarea class="form-control form-control-sm" id="myTextarea" rows="4" cols="50" asp-for="reason"></textarea>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

@*<div class="mt-2 text-center">
    @if (Model.listPRPOItems != null && Model.nStatus <= 1)
    {
        if (Model.nStatus == 0)
        {
            <button type="button" onclick="reSubmitPrPo()" class="btn btn-success"><i class="fas fa-fw fa-paper-plane"></i>Re-Submit</button>
        }
        <button type="button" onclick="submitPrPo()" class="btn btn-warning"><i class="fas fa-fw fa-save"></i> Save</button>
    }
    else
    {
        <button type="button" onclick="submitPrPo()" class="btn btn-success"><i class="fas fa-fw fa-paper-plane"></i> Submit</button>
    }

</div>*@

<div class="container mt-2 mb-2 text-center">
    <button type="button" onclick="previewReport()" class="btn btn-success"><i class="fas fa-fw fa-paper-plane"></i> Submit Report</button>
</div>


<div class="modal fade" id="reportModal" tabindex="-1" aria-labelledby="reportModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="reportModalLabel">Report Preview</h5>
                @*<button type="button" class="btn-close" id="cancelButton" aria-label="Close"></button>*@
            </div>
            <div class="modal-body">
                <iframe id="reportFrame" width="100%" height="500px" style="border: none;"></iframe>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="cancelButton">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmButton">Confirm</button>
            </div>
        </div>
    </div>
</div>
@section scripts {

    @* <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>*@
    <script src="~/js/select2.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="~/js/alertbox.js"></script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        var counter = $('.counterCell').length + 1;
        var modelEdit = '@Html.Raw(Json.Serialize(Model))';
        var parseModel = JSON.parse(modelEdit);
        $(function () {


            $('#confirmButton').on('click', function () {

                submitPrPo();

                $('#reportModal').modal('hide');
            });

            $('#cancelButton').on('click', function () {

                $('#reportModal').modal('hide');
            });

            if (parseModel.listPRPOItems !== null) {
                if (parseModel.listPRPOItems.length > 0) {
                    var curr = parseModel.listPRPOItems[0].currency;
                    var $currencyOption = $("<option selected='selected'></option>").val(curr).text(curr);

                    //$("#currency").append($currencyOption).trigger('change');
                }
            }
            updateTableAtt();
            getMainCode();
            getVendorCode();


            $('#mainCode').change(function () {

                clearBB();

                var _mainCode = $(this).val();

                $('#subCode1').val("");
                $('#subCode2').val("");

                $('#subCode1').select2({
                    ajax: {
                        url: '@Url.Action("subCode1Data","PRPO")',
                        dataType: 'json',
                        delay: 250,
                        data: function (params) {
                            return {
                                searchTerm: params.term,
                                mainCode: _mainCode// Pass the searchTerm parameter
                            };
                        },
                        processResults: function (data) {
                            return {
                                results: data
                            };
                        },
                        cache: true
                    },
                    minimumInputLength: 0
                });

                $('#subCode2').select2();

            });



            $('#subCode1').change(function () {
                clearBB();
                var _subCode1 = $(this).val();

                $('#subCode2').val("");

                $('#subCode2').select2({
                    ajax: {
                        url: '@Url.Action("subCode2Data","PRPO")',
                        dataType: 'json',
                        delay: 250,
                        data: function (params) {
                            return {
                                searchTerm: params.term,
                                subCode1: _subCode1// Pass the searchTerm parameter
                            };
                        },
                        processResults: function (data) {
                            return {
                                results: data
                            };
                        },
                        cache: true

                    },
                    minimumInputLength: 0
                });

            });

            $('#currency').change(function () {


                var curr = $(this).val();

                if (curr == "THB") {
                    $("#rate").val("0");
                } else {
                    $("#rate").val("");
                }
            });

            $('#subCode2').change(function () {

                var _mainCode = $("#mainCode").val();
                var _subCode1 = $("#subCode1").val();
                var _subCode2 = $("#subCode2").val();

                $.ajax({
                    url: '@Url.Action("getBudgetBalance","PRPO")',
                    type: 'POST',
                    data: { mainCode: _mainCode, subCode1: _subCode1, subCode2: _subCode2 },
                    success: function (response) {

                        $('#budget').val(response.budget);
                        $('#balance').val(response.balance);

                    },
                    error: function (xhr, status, error) {

                        alertErrorPopup(error);
                    }
                });

            });


            $('#listTable').on('click', '.deleteBtn', function () {
                var rowToDelete = $(this).closest('tr');
                var confirmation = confirm('Are you sure you want to delete this row?');
                if (confirmation) {

                    rowToDelete.remove();
                    updateCounter();
                    updateTotalAmount();
                }
            });



            $('#addToList').click(function () {



                if (!validateAdd()) return false;

                var newRow = $('<tr>');
                newRow.append('<td class="counterCell text-center">' + counter + '</td>');
                newRow.append('<td><input type="text" name="partNo"  class="form-control form-control-sm"></td>');
                newRow.append('<td><input type="text" name="partName"  class="form-control form-control-sm"></td>');

                var vatValue = ["I", "E", "N"];
                var vatText = ["Include VAT", "Exclude VAT", "No VAT"];


                var vatOption_Html = "<td>";
                vatOption_Html += "<select id='vatType' class='form-control form-control-sm vatType'>";


                for (var i = 0; i < vatValue.length; i++) {

                    var vatSelect = "";
                    if (vatValue[i] == $("#vatOption").val()) {
                        vatSelect = "selected";
                    }
                    vatOption_Html += `<option value= "${vatValue[i]}" ${vatSelect}>${vatText[i]}</option>`;
                }



                vatOption_Html += "</select></td>";

                newRow.append(vatOption_Html);


                newRow.append('<td><input type="number" name="unitPrice" value="0" class="form-control form-control-sm unitPrice"></td>');
                newRow.append('<td><input type="number" name="qty" value="0" class="form-control form-control-sm qty"></td>');
                newRow.append('<td><span class="amount"></span></td>');
                // newRow.append('<td>' + formattedAmount + '</td>');


                var deleteButton = $('<button>', {
                    type: 'button',
                    html: '<i class= "fas fa-trash"> </i> Delete',
                    class: 'deleteBtn btn btn-sm btn-danger'
                });
                newRow.append($('<td>').append(deleteButton));


                $('#listTable tbody').append(newRow);


                counter++;



            });
            $('#listTable').on('change', 'input[type="number"]', function () {

                var $row = $(this).closest('tr');


                calculateSum($row);
            });
        });

        function previewReport(poNo) {

            //var path = '@Url.Action("GetRdlcReportPreview", "PRPO" )';

            //  debugger;
            //$('#reportFrame').attr('src', path);
            //$('#reportModal').modal('show');

            if ($("#prpoForm").valid()) {


                var listItemPO = listItemPurchase();
                var data = $("#prpoForm").serialize();

                var jsonSerialized = 'listPRPOItem=' + encodeURIComponent(listItemPO);

                data += '&' + jsonSerialized;

                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetRdlcReportPreview","PRPO")',
                    data: data,
                    xhrFields: {
                        responseType: 'blob'  // Expect a binary (blob) response from the server
                    },
                    success: function (blob) {
                        debugger;
                        //var path = '@Url.Action("GetRdlcReportPreview", "PRPO" )/' + data;
                       
                        let url = URL.createObjectURL(blob);
                        $('#reportFrame').attr('src', url);
                        $('#reportModal').modal('show');
                    },
                    error: function (result) {
                        alertErrorPopup(`Failed to receive the Data : ${result.responseJSON.msg}`);

                    }
                });
            }

        }

        function calculateSum($row) {



            var unitPrice = parseFloat($row.find('.unitPrice').val()) || 0;
            var qty = parseFloat($row.find('.qty').val()) || 0;
            var amount = unitPrice * qty;
            var formattedAmount = amount.toLocaleString('en-US', {
                style: 'decimal',
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            });
            $row.find('.amount').text(formattedAmount);
            updateTotalAmount();
        }

        function clearBB() {
            $('#budget').val("0");
            $('#balance').val("0");
        }

        $('#fileInput').on('change', function () {
            var files = $(this)[0].files;
            var fileNames = [];

            for (var i = 0; i < files.length; i++) {
                fileNames.push(files[i].name);
            }

            var label = $(this).next('.custom-file-label');
            if (fileNames.length > 0) {
                label.html(fileNames.join(', '));
            } else {
                label.html('Choose files');
            }
        });

        $('#uploadButton').click(function () {
            var fileInput = $('#fileInput')[0];
            var files = fileInput.files;
            var formData = new FormData();


            for (var i = 0; i < files.length; i++) {
                formData.append('files', files[i]);
            }


            formData.append('queryString', '@Context.Request.Query["gID"]');

            $.ajax({
                url: '@Url.Action("UploadFiles","PRPO")',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {

                    getAttData(response.attList);
                },
                error: function (xhr, status, error) {

                    alertErrorPopup(error);
                }
            });
        });

        function deleteFile(fileName) {
            var confirmation = confirm('Are you sure you want to delete this file?');

            if (!confirmation) return false;
            $.ajax({
                url: '@Url.Action("DeleteFile","PRPO")', // Replace with your server-side delete endpoint
                type: 'POST',
                data: { fileName: fileName, queryString: '@Context.Request.Query["gID"]' },
                success: function (response) {
                    getAttData(response.attList);
                    updateTableAtt();
                },
                error: function (xhr, status, error) {

                    alertErrorPopup(error);
                }
            });
        }

        function getAttData(attList) {

            var label = $("#fileInput").next('.custom-file-label');
            label.html('Choose files');

            $("#fileInput").val("");
            var attTable = $('#attachedFilesTable tbody');
            attTable.empty();

            for (var i = 0; i < attList.length; i++) {
                var fileName = attList[i].sAttachName;
                var fileSize = attList[i].fAttachFileSize.toFixed(2) + " MB.";
                var fileType = attList[i].sAttachFileType;

                var row = $('<tr>');

                var filenameCell = $('<td>').append($('<a>').attr('href', "viewFile?fileName=" + attList[i].uPrId + '_' + fileName).text(fileName).attr('target', '_blank'));
                row.append(filenameCell);
                row.append($('<td>').text(fileSize + " MB."));
                row.append($('<td>').text(fileType));

                var deleteButton = $('<button>', {
                    type: 'button',
                    html: '<i class= "fas fa-trash"> </i> Delete',
                    class: 'deleteBtn btn btn-sm btn-danger',
                }).attr('data-file-name', fileName)
                    .click(function () {
                        // Handle delete button click
                        var fileName = $(this).attr('data-file-name');
                        deleteFile(fileName);
                    });

                row.append($('<td>').append(deleteButton));

                attTable.append(row);
            }
        }



        function submitPrPo() {



            var listItemPO = listItemPurchase();

            //$("#capexNo").focus();
            //$('html, body').animate({ scrollTop: 0 }, 'slow');


            if ($("#prpoForm").valid()) {


                var data = $("#prpoForm").serialize();

                var jsonSerialized = 'listPRPOItem=' + encodeURIComponent(listItemPO);

                data += '&' + jsonSerialized;
                data += '&' + 'gid=@Context.Request.Query["gID"]';

                data += '&' + 'isEdit=' + (parseModel.listPRPOItems != null ? "1" : "0");
                data += '&' + 'isReSubmit=0';
                console.log(data);

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("CreateOrEdit","PRPO")',
                    data: data,
                    success: function (result) {


                        alertPopup(`${result.msg}`).then((result) => {
                            if (result.isConfirmed) {
                                var url = '@Url.Action("worklist", "PRPO")';
                                window.location.href = url;
                            }
                        });
                        //console.log(result);
                    },
                    error: function (result) {
                        alertErrorPopup(`Failed to receive the Data : ${result.responseJSON.msg}`);

                    }
                });
            }
        }

        function reSubmitPrPo() {


            var listItemPO = listItemPurchase();

            if ($("#prpoForm").valid()) {


                var data = $("#prpoForm").serialize();

                var jsonSerialized = 'listPRPOItem=' + encodeURIComponent(listItemPO);

                data += '&' + jsonSerialized;
                data += '&' + 'gid=@Context.Request.Query["gID"]';

                data += '&' + 'isEdit=' + (parseModel.listPRPOItems != null ? "1" : "0");
                data += '&' + 'isReSubmit=1';
                console.log(data);

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("CreateOrEdit","PRPO")',
                    data: data,
                    success: function (result) {

                        alertPopup(`${result.msg}`).then((result) => {
                            if (result.isConfirmed) {
                                var url = '@Url.Action("worklist", "PRPO")';
                                window.location.href = url;
                            }
                        });
                        console.log(result);
                    },
                    error: function (result) {
                        alertErrorPopup(`Failed to receive the Data : ${result.responseJSON.msg}`);

                    }
                })
            }
        }

        function listItemPurchase() {

            var tableData = [];

            $("#listTable tbody tr").each(function () {
                var rowData = {};
                var cellData = $(this).find('td');
                var vatType = $(this).find('.vatType').val();

                rowData["no"] = cellData.eq(0).text();

                $(this).find('input').each(function (index, input) {
                    var name = $(input).attr('name').replace('[]', '');
                    var value = $(input).val();
                    rowData[name] = value;
                });
                rowData["vatType"] = vatType;

                rowData["amount"] = cellData.eq(6).text();
                tableData.push(rowData);

            });

            var jsonOutput = JSON.stringify(tableData, null, 2);


            console.log(jsonOutput);
            //alert(jsonOutput);

            return jsonOutput;

        }

        function GetItemPrice(selectedValue) {

            $.ajax({
                url: '@Url.Action("GetItemPrice","PRPO")',
                data: { itemCode: selectedValue },
                success: function (data) {
                    $("#itemDesc").val(data.itemDesc);
                    $("#uom").val($.trim(data.itemPrice.tCuqp));
                    $("#unitCost").val(data.itemPrice.tPrip);


                }
            });



        }

        function getMainCode() {
            $('#mainCode').select2({
                ajax: {
                    url: '@Url.Action("mainCodeData","PRPO")',
                    dataType: 'json',
                    delay: 250,
                    data: function (params) {
                        return {
                            searchTerm: params.term // Pass the searchTerm parameter
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: data
                        };
                    },
                    cache: true

                },
                minimumInputLength: 0
            });
        }

        function getVendorCode() {
            $('#vendorName').select2({
                ajax: {
                    url: '@Url.Action("vendorData","PRPO")',
                    dataType: 'json',
                    delay: 250,
                    data: function (params) {
                        return {
                            searchTerm: params.term // Pass the searchTerm parameter
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: data
                        };
                    },
                    cache: true

                },
                minimumInputLength: 0
            });
        }



        function getCostCenter() {
            $('#costCenter').select2({
                ajax: {
                    url: '@Url.Action("getCostCenterData","PRPO")',
                    dataType: 'json',
                    delay: 250,
                    data: function (params) {
                        return {
                            searchTerm: params.term // Pass the searchTerm parameter
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: data
                        };
                    },
                    cache: true
                },
                minimumInputLength: 0
            });

        }

        function getCurrency() {
            $('#currency').select2({
                ajax: {
                    url: '@Url.Action("getCurrency","PRPO")',
                    dataType: 'json',
                    delay: 250,
                    data: function (params) {
                        return {
                            searchTerm: params.term // Pass the searchTerm parameter
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: data
                        };
                    },
                    cache: true
                },
                minimumInputLength: 0
            });

        }

        function updateCounter() {


            if ($('.counterCell').length === 0) {
                counter = 1;
            }
            $('.counterCell').each(function (index) {
                console.log($(this).text());
                $(this).text(index + 1);
                counter = parseInt($(this).text()) + 1;
            });
        }

        function clearSrcItem() {
            var $currencyOption = $("<option selected='selected'></option>").val("").text("--- Select Currency ---");
            $("#currency").append($currencyOption).trigger('change');

            var $glCodeOption = $("<option selected='selected'></option>").val("").text("--- Select GL Code ---");
            $("#glCode").append($glCodeOption).trigger('change');

            var $costCenterOption = $("<option selected='selected'></option>").val("").text("--- Select Cost Center ---");
            $("#costCenter").append($costCenterOption).trigger('change');

            $('#itemCode').val("");
            $('#itemDesc').val("");

            $("#requestDate").val("");
            $("#qty").val(0);
            $("#unitCost").val("");
            $("#currency").val("");
            $("#uom").val("");

        }

        function updateTotalAmount() {


            var totalAmount = 0;
            var totalAmountTHB = 0;
            var rate = $("#rate").val();

            if (rate == "" || rate == 0) rate = "1";


            $("#listTable tr").each(function () {
                $(this).find("td:eq(6)").each(function () {

                    totalAmount += parseFloat($(this).text().replace(/,/g, ""));
                    console.log(totalAmount);
                });
            });

            totalAmountTHB = totalAmount * parseFloat(rate);

            var formattedTotalAmount = totalAmount.toLocaleString('en-US', {
                style: 'decimal',
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            });

            var formattedTotalAmountTHB = totalAmountTHB.toLocaleString('en-US', {
                style: 'decimal',
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            });

            $("#totalAmount").val(formattedTotalAmount);

            $("#totalAmountTHB").val(formattedTotalAmountTHB);
        }

        function validateAdd() {

            var vatOption = $('#vatOption').val();
            var rate = $("#rate").val();

            // Perform validation
            if (vatOption.trim() === '') {
                $('#vatOption').focus()
                alertValidate('Please enter Vat type before add to list.');
                return false;
            }

            if (rate.trim() === '') {
                $('#rate').focus();
                alertValidate('Please enter Rate before add to list.');
                return false;
            }



            return true;
        }

        function updateTableAtt() {
            var countRow = $('#attachedFilesTable tbody tr').length;
            var attTable = $('#attachedFilesTable tbody');

            if (countRow === 0) {
                attTable.empty();
                var Row = $('<tr>');
                var Cell = $('<td colspan="4">').text('No attachment file.');

                Row.append(Cell);
                attTable.append(Row);
            }
        }
    </script>
}
